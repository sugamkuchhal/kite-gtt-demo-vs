name: Manual Script Runner

on:
  workflow_dispatch:
    inputs:
      command:
        description: "Full command to run (e.g. python3 fetch_holdings_vs.py)"
        required: true
        default: "python3 fetch_holdings_vs.py"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Google Chrome
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install
          google-chrome --version

      - name: Install dependencies (system-wide, no pip upgrade)
        env:
          PIP_BREAK_SYSTEM_PACKAGES: "1"
        run: |
          sudo -E python3 -m pip install \
            gspread gspread-formatting kiteconnect pandas requests retrying tqdm \
            google-auth google-auth-oauthlib google-auth-httplib2 webdriver-manager selenium pyotp

      - name: Recreate secret files (keep Mac path + repo root)
        env:
          API_KEY_VS: ${{ secrets.API_KEY_VS }}
          ACCESS_TOKEN_VS: ${{ secrets.ACCESS_TOKEN_VS }}
          CREDS_VS_JSON: ${{ secrets.CREDS_VS_JSON }}
        run: |
          set -euo pipefail
          MACDIR="/Users/sugamkuchhal/Documents/kite-gtt-demo-vs"

          echo "📁 Creating Mac-style directory..."
          sudo mkdir -p "$MACDIR"
          sudo chmod -R 777 /Users || true

          echo "🪄 Writing secret files..."
          if [ -n "$API_KEY_VS" ]; then
            echo "$API_KEY_VS" | sudo tee "$MACDIR/api_key_vs.txt" > /dev/null
            echo "$API_KEY_VS" > api_key_vs.txt
          fi

          if [ -n "$ACCESS_TOKEN_VS" ]; then
            echo "$ACCESS_TOKEN_VS" | sudo tee "$MACDIR/access_token_vs.txt" > /dev/null
            echo "$ACCESS_TOKEN_VS" > access_token_vs.txt
          fi

          if [ -n "$CREDS_VS_JSON" ]; then
            echo "$CREDS_VS_JSON" | sudo tee "$MACDIR/creds_vs.json" > /dev/null
            echo "$CREDS_VS_JSON" > creds_vs.json
          fi

          sudo chmod -R 777 "$MACDIR"
          echo "✅ Secrets written successfully."
          ls -l "$MACDIR" || true
          ls -l creds_vs.json || true

      - name: Run your command as root (preserve env)
        run: sudo -E bash -lc '${{ github.event.inputs.command }}'
