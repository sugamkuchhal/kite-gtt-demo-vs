name: Unified Script Runner VS

on:
  schedule:
    - cron: "30 10 * * 1-5"  # 4:00 PM IST, Monâ€“Fri
  workflow_dispatch:
    inputs:
      command:
        description: "Optional: full command to run (e.g. python3 fetch_holdings.py). Leave empty to run the automated chain."
        required: false
        default: ""

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Google Chrome
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install
          google-chrome --version

      - name: Create virtualenv and install deps
        run: |
          python3 -m venv .venv
          .venv/bin/python -m pip install --upgrade pip
          .venv/bin/pip install \
            gspread gspread-formatting kiteconnect pandas requests \
            retrying tqdm google-auth google-auth-oauthlib google-auth-httplib2 \
            webdriver-manager selenium pyotp yfinance oauth2client

      - name: Recreate secret files (repo root + Mac path mirror)
        env:
          API_KEY: ${{ secrets.API_KEY }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          CREDS_JSON: ${{ secrets.CREDS_JSON }}
          SMTP_TOKEN_JSON: ${{ secrets.SMTP_TOKEN_JSON }}
        run: |
          set -euo pipefail
          MACDIR="/Users/sugamkuchhal/Documents/kite-gtt-demo"
          sudo mkdir -p "$MACDIR" || true
          [ -n "$API_KEY" ] && printf '%s' "$API_KEY" > api_key.txt
          [ -n "$ACCESS_TOKEN" ] && printf '%s' "$ACCESS_TOKEN" > access_token.txt
          [ -n "$CREDS_JSON" ] && printf '%s' "$CREDS_JSON" > creds.json
          [ -n "$SMTP_TOKEN_JSON" ] && printf '%s' "$SMTP_TOKEN_JSON" > smtp_token.json
          [ -n "$API_KEY" ] && printf '%s' "$API_KEY" | sudo tee "$MACDIR/api_key.txt" >/dev/null || true
          [ -n "$ACCESS_TOKEN" ] && printf '%s' "$ACCESS_TOKEN" | sudo tee "$MACDIR/access_token.txt" >/dev/null || true
          [ -n "$CREDS_JSON" ] && printf '%s' "$CREDS_JSON" | sudo tee "$MACDIR/creds.json" >/dev/null || true
          [ -n "$SMTP_TOKEN_JSON" ] && printf '%s' "$SMTP_TOKEN_JSON" | sudo tee "$MACDIR/smtp_token.json" >/dev/null || true
          ls -l creds.json smtp_token.json api_key.txt access_token.txt || true

      - name: Run (manual command if provided, else automated chain)
        env:
          INPUT_COMMAND: ${{ github.event.inputs.command }}
        run: |
          sudo -E bash -lc '
            source .venv/bin/activate
            if [ -n "${INPUT_COMMAND:-}" ]; then
              eval "$INPUT_COMMAND"
            else
              python3 nse_combined_fetcher.py --mode stock --ticker-file nse_stock_list.txt --worksheet "NSE_Stock_Data" --max-workers 3 --batch-size 50
              python3 nse_combined_fetcher.py --mode etf --ticker-file nse_etf_list.txt --worksheet "NSE_ETF_Data" --max-workers 3 --batch-size 50
              python3 nse_data_etl.py
              python3 prepare_feed_date_ext.py
              python3 prepare_feed_data_val.py
              python3 prepare_feed_list.py --sheet-name "Algo Master Feed Sheet" --source-sheet "SGST_OPEN_LIST" --dest-sheet "SGST_FILTERED_TICKERS"
              python3 prepare_feed_list.py --sheet-name "Algo Master Feed Sheet" --source-sheet "SUPER_OPEN_LIST" --dest-sheet "SUPER_FILTERED_TICKERS"
              python3 prepare_feed_list.py --sheet-name "Algo Master Feed Sheet" --source-sheet "TURTLE_OPEN_LIST" --dest-sheet "TURTLE_FILTERED_TICKERS"
              python3 fetch_all_gtts.py
              python3 fetch_all_orders.py
              python3 append_new_orders.py
              python3 fifo_portfolio.py
              python3 fetch_holdings.py
              python3 date_ext.py
              python3 data_val.py
              python3 ops_sort.py --sheet-name="SARAS D G B - SGST (Reversal Validation) With BOH" --green-tab="GTT_List" --red-tab="Old_GTT_List" --yellow-tab="Action_List"
              python3 ops_sort.py --sheet-name="SARAS D G B - Super BreakOut With BOH" --green-tab="GTT_List" --red-tab="Old_GTT_List" --yellow-tab="Action_List"
              python3 ops_sort.py --sheet-name="SARAS D G B - Turtle Trading with BOH" --green-tab="GTT_List" --red-tab="Old_GTT_List" --yellow-tab="Action_List"
              bash combined_run.sh
              python3 ops_sort.py --sheet-name="SARAS Portfolio - Stocks" --green-tab="Mailing_List" --red-tab="Old_Mailing_List" --yellow-tab="Action_Mailing_List" --loose-update
              python algo_tickers_mailer.py --emails "sugamkuchhal@gmail.com,sharma.virat@gmail.com"
            fi
          '
